{"version":3,"sources":["services/config/swapiConfig.ts","services/swapi-service.ts","features/films/FilmSlice.ts","hooks/redux-hooks.ts","components/utils/CustomLoadingCellRenderer.tsx","components/ag-grid/Grid.tsx","components/loading-spinner/LoadingSinner.tsx","components/Films.tsx","features/characters/CharacterSlice.ts","components/modals/CharacterModalCompoent.tsx","components/DisplayCharacters.tsx","components/Characters.tsx","assets/1.jpg","assets/2.jpg","assets/3.jpg","assets/4.jpg","assets/5.jpg","assets/6.jpg","components/utils/imageEntry.ts","components/DisplayFilmInfo.tsx","components/ErrorPage.tsx","features/planet/PlanetSlice.ts","components/modals/PlanetModalComponent.tsx","components/DisplayPlanets.tsx","components/Planets.tsx","features/species/SpeciesSlice.ts","components/modals/SpeciesModalComponent.tsx","components/DisplaySpecies.tsx","components/Species.tsx","features/starship/StarshipSlice.ts","components/modals/StarshipModalComponent.tsx","components/DisplayStarships.tsx","components/Starships.tsx","features/vehicle/VehicleSlice.ts","components/modals/VehicleModalComponent.tsx","components/DisplayVehicles.tsx","components/Vehicles.tsx","components/Film.tsx","assets/logo.png","components/Header.tsx","App.tsx","reportWebVitals.js","store/index.ts","index.js"],"names":["swapiPath","swapiInstance","axios","create","baseURL","window","location","hostname","concat","defaults","headers","common","post","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","apply","arguments","filmsSlice","createSlice","name","initialState","films","loading","errors","film","title","episode_id","opening_crawl","director","producer","release_date","characters","planets","starships","vehicles","species","created","edited","url","reducers","setFilms","state","action","payload","setLoading","setErrors","setFilm","_filmsSlice$actions","actions","filmsSelector","filmsStore","filmSelector","useAppDispatch","useDispatch","useAppSelector","useSelector","props","_jsxs","className","style","paddingLeft","lineHeight","children","_jsx","loadingMessage","Grid","_useState","useState","columnDefs","_useState2","_slicedToArray","setColumnDefs","_useState3","rowData","_useState4","setRowData","useMemo","loadingCellRenderer","CustomLoadingCellRenderer","loadingCellRendererParams","height","width","AgGridReact","animateRows","onRowClicked","Message","styled","small","_templateObject","_taggedTemplateLiteral","LoadingSpinner","intervalId","_ref$message","message","_ref$testId","testId","timer","setTimer","useEffect","setInterval","updateTimer","clearInterval","prevTimer","_Fragment","display","justifyContent","data-test","Spinner","fadeIn","margin","Films","dispatch","_useAppSelector","navigate","useNavigate","_response$data","response","data","results","t0","_x","headerName","field","sortable","autoHeight","tooltipField","event","_event$data","charactersSlice","setCharacters","_charactersSlice$acti","characterSelector","charactersStore","CharacterModalComponent","show","person","handleClose","Modal","onHide","Header","closeButton","Title","Body","mass","hair_color","skin_color","eye_color","birth_year","gender","moment","format","Footer","Button","variant","onClick","DisplayCharacters","setShow","currentCharacter","setCurrentCharacter","Card","as","ListGroup","map","character","index","Item","handleShow","Characters","characterData","setCharacterData","urls","Promise","allSettled","then","forEach","push","value","catch","err","console","log","imageList","img","ep1","ep2","ep3","ep4","ep5","ep6","DisplayFilmInfo","currentImage","setCurrentImage","_imageList$find","find","image","Container","Row","Col","Image","src","alt","fluid","Subtitle","Text","ErrorPage","errorCode","planetsSlice","setPlanets","_planetsSlice$actions","planetSelector","planetsStore","PlanetModalComponent","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","DisplayPlanets","currentPlanet","setCurrentPlanet","Planets","planetData","setPlanetData","speciesSlice","setSpecies","_speciesSlice$actions","speciesSelector","speciesStore","SpeciesModalComponent","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","DisplaySpecies","currentSpecies","setCurrentSpecies","specie","Species","speciesData","setSpeciesData","starshipsSlice","setStarships","_starshipsSlice$actio","starshipSelector","starshipsStore","StarshipModalComponent","starship","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","DisplayStarships","currentStarship","setCurrentStarship","Starships","starshipData","setStarshipData","vehiclesSlice","setVehicles","_vehiclesSlice$action","vehicleSelector","vehiclesStore","VehicleModalComponent","vehicle","vehicle_class","DisplayVehicles","currentVehicle","setCurrentVehicle","Vehicles","vehicleData","setVehicleData","Film","_location$state2","_location$state2$film","_location$state3","_location$state4","_location$state5","_location$state5$film","_location$state6","_location$state6$film","_location$state7","_location$state7$film","_location$state8","_location$state8$film","_location$state9","_location$state9$film","_location$state10","_location$state10$fil","_location$state11","_location$state11$fil","_location$state12","_location$state12$fil","_location$state13","_location$state13$fil","_location$state14","_location$state14$fil","_location$state15","_location$state15$fil","_location$state16","_location$state16$fil","_location$state17","_location$state17$fil","_location$state18","_location$state18$fil","_location$state19","_location$state19$fil","_location$state20","_location$state20$fil","_location$state21","_location$state21$fil","_location$state22","_location$state22$fil","_location$state23","_location$state23$fil","useLocation","_location$state","_location$state$film","_ref2","_callee2","_context2","_x2","undefined","logo","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","filmsSliceReducer","characterSliceReducer","planetsSliceReducer","speciesSliceReducer","starshipSliceReducer","vehicleSliceReducer","store","configureStore","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.7a88b9a6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst swapiPath = '/api/';\r\n\r\nconst getSwapiBaseUrl = () => {\r\n\tif (window.location.hostname === 'localhost') {\r\n\t\treturn `https://swapi.dev${swapiPath}`;\r\n\t}\r\n\r\n\treturn `https://swapi.dev${swapiPath}`;\r\n};\r\n\r\nconst swapiInstance = axios.create({\r\n\tbaseURL: getSwapiBaseUrl(),\r\n});\r\n\r\nswapiInstance.defaults.headers.common['Accept'] = 'application/json';\r\nswapiInstance.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nexport default swapiInstance;","import swapiInstance from \"./config/swapiConfig\";\r\n\r\nexport const getFilms = async () =>\r\n\tawait swapiInstance.get(`films`);","import { createSlice } from '@reduxjs/toolkit';\r\nimport IFilm from '../../model/Film';\r\nimport { getFilms } from '../../services/swapi-service'\r\nimport { AnyAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport axios from 'axios';\r\n\r\nexport interface FilmState {\r\n    films: IFilm[]\r\n    loading: boolean;\r\n    errors: string;\r\n    film: IFilm;\r\n}\r\n\r\nconst initialState: FilmState = {\r\n    films: [],\r\n    loading: false,\r\n    errors: \"\",\r\n    film: {\r\n      title: '',\r\n      episode_id: '', \r\n      opening_crawl: '',\r\n      director: '',\r\n      producer: '', \r\n      release_date: '', \r\n      characters: [], \r\n      planets: [],\r\n      starships: [], \r\n      vehicles: [],\r\n      species: [], \r\n      created: '', \r\n      edited: '',\r\n      url: '',\r\n  },\r\n}\r\n// Slice\r\nconst filmsSlice = createSlice({\r\n  name: 'films',\r\n  initialState,\r\n  reducers: {\r\n    setFilms: (state, action) => {\r\n      state.films = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n    setFilm: (state, action) => {\r\n      state.film = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setFilms, setLoading, setErrors, setFilm } = filmsSlice.actions;\r\n\r\nexport default filmsSlice.reducer;\r\n\r\nexport const filmsSelector = (state: {filmsStore: FilmState}) => state.filmsStore;\r\nexport const filmSelector = (state: {filmsStore: FilmState}) => state.filmsStore;\r\n\r\n// Actions\r\nexport const getAllFilms = (): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      const response = await getFilms();\r\n      dispatch(setLoading(false));\r\n      dispatch(setFilms(response.data?.results));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFilm = (url: string): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      const response = await axios.get(url);\r\n      dispatch(setLoading(false));\r\n      dispatch(setFilm(response.data));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from 'react';\r\nimport { ILoadingCellRendererParams } from 'ag-grid-community';\r\n\r\nexport default (\r\n  props: ILoadingCellRendererParams & { loadingMessage: string }\r\n) => {\r\n  return (\r\n    <div\r\n      className=\"ag-custom-loading-cell\"\r\n      style={{ paddingLeft: '10px', lineHeight: '25px' }}\r\n    >\r\n      <i className=\"fas fa-spinner fa-pulse\"></i>{' '}\r\n      <span> {props.loadingMessage}</span>\r\n    </div>\r\n  );\r\n};","import React, { useState, useMemo } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport CustomLoadingCellRenderer from '../utils/CustomLoadingCellRenderer';\r\n\r\nfunction Grid(props: any) {\r\n  const [columnDefs, setColumnDefs] = useState(props.columnDefs);\r\n  const [rowData, setRowData] = useState(props.rowData);\r\n\r\n  useMemo(() => {\r\n    setColumnDefs(props.columnDefs);\r\n  }, [props.columnDefs]);\r\n\r\n  useMemo(() => {\r\n    setRowData(props.rowData);\r\n  }, [props.rowData]);\r\n\r\n  const loadingCellRenderer = useMemo(() => {\r\n    return CustomLoadingCellRenderer;\r\n  }, []);\r\n  const loadingCellRendererParams = useMemo(() => {\r\n    return {\r\n      loadingMessage: 'One moment please...',\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ag-theme-alpine-dark\" style={{height: \"40vh\", width: \"100%\"}}>\r\n        <AgGridReact columnDefs={columnDefs} \r\n                    rowData={rowData}\r\n                    loadingCellRenderer={loadingCellRenderer}\r\n                    loadingCellRendererParams={loadingCellRendererParams}\r\n                    animateRows={true}\r\n                    onRowClicked={props.onRowClicked}\r\n        />\r\n    </div>  \r\n  ); \r\n}\r\n\r\nexport default Grid;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Spinner from 'react-spinkit';\r\nimport styled from 'styled-components';\r\n\r\nconst Message = styled.small`\r\n\ttext-align: center;\r\n\tdisplay: block;\r\n`;\r\n\r\nconst spinnerStyles = {\r\n\ttextAlign: 'center',\r\n\tmargin: '2em'\r\n};\r\n\r\ninterface LoadingSpinnerProps {\r\n  message?: string;\r\n  testId?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\r\n  message = 'Loading...',\r\n  testId = 'loading',\r\n}) => {\r\n  const [timer, setTimer] = useState(0);\r\n  let intervalId: NodeJS.Timeout;\r\n\r\n  useEffect(() => {\r\n    intervalId = setInterval(updateTimer, 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const updateTimer = () => {\r\n    setTimer(prevTimer => (prevTimer === 15 ? 15 : prevTimer + 1));\r\n    if (timer === 15) clearInterval(intervalId);\r\n  };\r\n\r\n  if (timer > 2 && timer <= 5) message = 'Still Loading...';\r\n  if (timer > 5 && timer < 15) message = 'This is taking a while...';\r\n  if (timer >= 15)\r\n    message =\r\n      'Something may have gone wrong, please try refreshing the page.';\r\n\r\n  const spinnerStyles = { margin: 'auto' };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }} data-test={testId}>\r\n        <div>\r\n          <Spinner name=\"three-bounce\" fadeIn=\"none\" style={spinnerStyles} />\r\n        </div>\r\n      </div>\r\n      <Message>{message}</Message>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect } from 'react';\r\nimport { getAllFilms, filmsSelector } from '../features/films/FilmSlice'\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport Grid from './ag-grid/Grid';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\n\r\nconst Films = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { films, loading } = useAppSelector(filmsSelector);\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getAllFilms());\r\n    }, [dispatch]);\r\n\r\n    const columnDefs = [\r\n        {\r\n            headerName: \"Title\",\r\n            field: \"title\",\r\n            width: 200,\r\n            sortable: true\r\n        },\r\n        {\r\n            headerName: \"Episode\",\r\n            field: \"episode_id\",\r\n            width: 100,\r\n            sortable: true\r\n        },\r\n        {\r\n            headerName: \"Summary\",\r\n            field: \"opening_crawl\",\r\n            width: 355,\r\n            sortable: true,\r\n            autoHeight: true,\r\n            tooltipField: 'opening_crawl'\r\n        },\r\n        {\r\n            headerName: \"Director\",\r\n            field: \"director\",\r\n            width: 150,\r\n            sortable: true,\r\n            tooltipField: 'director'\r\n        },\r\n        {\r\n            headerName: \"Producer\",\r\n            field: \"producer\",\r\n            width: 150,\r\n            sortable: true,\r\n            tooltipField: 'producer'\r\n        },\r\n        {\r\n            headerName: \"Release Date\",\r\n            field: \"release_date\",\r\n            width: 150,\r\n            sortable: true\r\n        }\r\n    ];\r\n    const onRowClicked = (event: any) => {\r\n        navigate(`film/${event?.data?.title}`, {\r\n            state: {\r\n                film: event?.data\r\n            }\r\n        }); \r\n    }\r\n\r\n    if (loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"display-4 my-3 text-center\">Star Wars Movies</h1>\r\n            <Grid rowData={films}\r\n                columnDefs={columnDefs}\r\n                onRowClicked={onRowClicked}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Films;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AnyAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport axios from 'axios';\r\nimport ICharacter from '../../model/Character';\r\n\r\nexport interface CharacterState {\r\n    characters: ICharacter[]\r\n    loading: boolean;\r\n    errors: string;\r\n}\r\n\r\nconst initialState: CharacterState = {\r\n  characters: [],\r\n    loading: false,\r\n    errors: \"\",\r\n}\r\n// Slice\r\nconst charactersSlice = createSlice({\r\n  name: 'characters',\r\n  initialState,\r\n  reducers: {\r\n    setCharacters: (state, action) => {\r\n      state.characters = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCharacters, setLoading, setErrors } = charactersSlice.actions;\r\n\r\nexport default charactersSlice.reducer;\r\n\r\nexport const characterSelector = (state: {charactersStore: CharacterState}) => state.charactersStore;\r\n\r\n// Actions\r\n\r\nexport const getCharacter = (urls: string[]): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      let characterData: ICharacter[] = []\r\n      await Promise.allSettled(urls.map((url) => axios.get(url)))\r\n        .then((data) => {\r\n          data.forEach((character: any) => characterData.push(character?.value.data))\r\n        })\r\n        .catch((err) => console.log(err));\r\n      dispatch(setLoading(false));\r\n      dispatch(setCharacters(characterData));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport ICharacter from '../../model/Character';\r\nimport moment from 'moment';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  person: ICharacter | undefined;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst CharacterModalComponent: React.FC<Props> = ({ show, person, handleClose }) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{person?.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Height: {person?.height}</p>\r\n          <p>Mass: {person?.mass}</p>\r\n          <p>Hair Color: {person?.hair_color}</p>\r\n          <p>Skin Color: {person?.skin_color}</p>\r\n          <p>Eye Color: {person?.eye_color}</p>\r\n          <p>Birth Year: {person?.birth_year}</p>\r\n          <p>Gender: {person?.gender}</p>\r\n          <p>Created: {moment(person?.created).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n          <p>Edited: {moment(person?.edited).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterModalComponent;\r\n","import React, { useState } from 'react'\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport ICharacter from '../model/Character';\r\nimport CharacterModalComponent from './modals/CharacterModalCompoent';\r\n\r\ntype CharactersProps = {\r\n  characters: ICharacter[];\r\n};\r\n\r\nconst DisplayCharacters = ({ characters }: CharactersProps) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentCharacter, setCurrentCharacter] = useState<ICharacter>();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (character: ICharacter) => {\r\n    setCurrentCharacter(character);\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header as=\"h5\">Characters</Card.Header>\r\n        <Card.Body>\r\n          <ListGroup variant=\"flush\">\r\n            {characters.map((character, index) => (\r\n              <>\r\n                <ListGroup.Item key={index} onClick={() => handleShow(character)}>{character.name}</ListGroup.Item>\r\n              </>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n      <CharacterModalComponent show={show}\r\n                              person={currentCharacter}\r\n                              handleClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayCharacters;\r\n","import React, { useEffect, useState} from 'react';\r\nimport { characterSelector, getCharacter } from '../features/characters/CharacterSlice';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport ICharacter from '../model/Character';\r\nimport DisplayCharacters from './DisplayCharacters';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\n\r\nfunction Characters(props: { characters: string[] }) {\r\n    const [characterData, setCharacterData] = useState<ICharacter[]>([]);\r\n\r\n    const dispatch: any = useAppDispatch();\r\n    const { characters, loading } = useAppSelector(characterSelector);\r\n\r\n    useEffect(() => {\r\n      dispatch(getCharacter(props.characters));\r\n    },[props.characters, dispatch])\r\n\r\n    useEffect(() => {\r\n      setCharacterData(characters);\r\n    }, [characters]);\r\n\r\n    if (loading) {\r\n      return <LoadingSpinner />;\r\n  }\r\n  \r\n    return (\r\n      <>\r\n        <DisplayCharacters characters={characterData} />\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Characters;","export default __webpack_public_path__ + \"static/media/1.b36a0400.jpg\";","export default __webpack_public_path__ + \"static/media/2.d5b72c7b.jpg\";","export default __webpack_public_path__ + \"static/media/3.ac915746.jpg\";","export default __webpack_public_path__ + \"static/media/4.23cd54cb.jpg\";","export default __webpack_public_path__ + \"static/media/5.dd73f261.jpg\";","export default __webpack_public_path__ + \"static/media/6.f8d48760.jpg\";","import ep1 from '../../assets/1.jpg';\r\nimport ep2 from '../../assets/2.jpg';\r\nimport ep3 from '../../assets/3.jpg';\r\nimport ep4 from '../../assets/4.jpg';\r\nimport ep5 from '../../assets/5.jpg';\r\nimport ep6 from '../../assets/6.jpg';\r\n\r\nlet imageList: any = [];\r\n\r\nimageList = \r\n    [{\r\n        title: 'The Phantom Menace',\r\n        img: ep1\r\n    },\r\n    {\r\n        title: 'Attack of the Clones',\r\n        img: ep2\r\n    },\r\n    {\r\n        title: 'Revenge of the Sith',\r\n        img: ep3\r\n    },\r\n    {\r\n        title: 'A New Hope',\r\n        img: ep4\r\n    },\r\n    {\r\n        title: 'The Empire Strikes Back',\r\n        img: ep5\r\n    },\r\n    {\r\n        title: 'Return of the Jedi',\r\n        img: ep6\r\n    }]\r\n\r\nexport {\r\n    imageList\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport IFilm from '../model/Film';\r\nimport { imageList } from './utils/imageEntry';\r\n\r\nconst DisplayFilmInfo = ({\r\n  title,\r\n  episode_id,\r\n  opening_crawl,\r\n  director,\r\n  producer,\r\n  release_date,\r\n}: IFilm) => {\r\n\r\n  const [currentImage, setCurrentImage] = useState()\r\n\r\n  useEffect(() => {\r\n    setCurrentImage(imageList.find((image: any) => image.title === title)?.img);\r\n  },[])\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n          <Col key={episode_id} className=\"text-center\">\r\n              <Image src={currentImage} alt={title} fluid />\r\n          </Col>\r\n          <Col>\r\n              <Card>\r\n                <Card.Header as=\"h5\">{title}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>Episode {episode_id}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    Directed by {director}\r\n                  </Card.Subtitle>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    Produced by {producer}\r\n                  </Card.Subtitle>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    Released on {release_date}\r\n                  </Card.Subtitle>\r\n                  <Card.Text>{opening_crawl}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n          </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DisplayFilmInfo;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  errorCode: number;\r\n}\r\n\r\nfunction ErrorPage({ errorCode }: Props) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      {errorCode === 404 ? (\r\n        <h1 className=\"text-center\">404 Not Found</h1>\r\n      ) : (\r\n        <h1 className=\"text-center\">500 Internal Server Error</h1>\r\n      )}\r\n      <p className=\"text-center\">Sorry, an error has occurred.</p>\r\n      <Button onClick={() => navigate(-1)}>Back</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AnyAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport axios from 'axios';\r\nimport IPlanet from '../../model/Planet';\r\n\r\nexport interface PlanetState {\r\n    planets: IPlanet[]\r\n    loading: boolean;\r\n    errors: string;\r\n}\r\n\r\nconst initialState: PlanetState = {\r\n    planets: [],\r\n    loading: false,\r\n    errors: \"\",\r\n}\r\n// Slice\r\nconst planetsSlice = createSlice({\r\n  name: 'planets',\r\n  initialState,\r\n  reducers: {\r\n    setPlanets: (state, action) => {\r\n      state.planets = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPlanets, setLoading, setErrors } = planetsSlice.actions;\r\n\r\nexport default planetsSlice.reducer;\r\n\r\nexport const planetSelector = (state: {planetsStore: PlanetState}) => state.planetsStore;\r\n\r\n// Actions\r\n\r\nexport const getPlanet = (urls: string[]): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      let planetData: IPlanet[] = []\r\n      await Promise.allSettled(urls.map((url) => axios.get(url)))\r\n        .then((data) => {\r\n          data.forEach((planet: any) => planetData.push(planet?.value.data))\r\n        })\r\n        .catch((err) => console.log(err));\r\n      dispatch(setLoading(false));\r\n      dispatch(setPlanets(planetData));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport IPlanet from '../../model/Planet';\r\nimport moment from 'moment';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    planet: IPlanet | undefined;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst PlanetModalComponent: React.FC<Props> = ({ show, planet, handleClose  }) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{planet?.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Rotation Period: {planet?.rotation_period}</p>\r\n          <p>Orbital Period: {planet?.orbital_period}</p>\r\n          <p>Diameter: {planet?.diameter}</p>\r\n          <p>Climate: {planet?.climate}</p>\r\n          <p>Gravity: {planet?.gravity}</p>\r\n          <p>Terrain: {planet?.terrain}</p>\r\n          <p>Surface Water: {planet?.surface_water}</p>\r\n          <p>Population: {planet?.population}</p>\r\n          <p>Created: {moment(planet?.created).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n          <p>Edited: {moment(planet?.edited).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanetModalComponent;\r\n","import React, { useState } from 'react'\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport IPlanet from '../model/Planet';\r\nimport PlanetModalComponent from './modals/PlanetModalComponent';\r\n\r\ntype PlanetsProps = {\r\n  planets: IPlanet[];\r\n};\r\n\r\nconst DisplayPlanets = ({ planets }: PlanetsProps) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentPlanet, setCurrentPlanet] = useState<IPlanet>();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (planet: IPlanet) => {\r\n    setCurrentPlanet(planet);\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header as=\"h5\">Planets</Card.Header>\r\n        <Card.Body>\r\n          <ListGroup variant=\"flush\">\r\n            {planets.map((planet, index) => (\r\n              <ListGroup.Item key={index} onClick={()=> handleShow(planet)}>{planet.name}</ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n      <PlanetModalComponent show={show}\r\n                            planet={currentPlanet}\r\n                            handleClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayPlanets;\r\n","import React, { useEffect, useState} from 'react';\r\nimport { getPlanet, planetSelector } from '../features/planet/PlanetSlice';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport IPlanet from '../model/Planet';\r\nimport DisplayPlanets from './DisplayPlanets';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\n\r\nfunction Planets(props:{ planets: string[] }) {\r\n    const [planetData, setPlanetData] = useState<IPlanet[]>([]);\r\n  \r\n    const dispatch: any = useAppDispatch();\r\n    const { planets, loading } = useAppSelector(planetSelector);\r\n\r\n    useEffect(() => {\r\n      dispatch(getPlanet(props.planets));\r\n    }, [props.planets, dispatch])\r\n    \r\n    \r\n    useEffect(() => {\r\n      setPlanetData(planets);\r\n    }, [planets]);\r\n\r\n    if (loading) {\r\n      return <LoadingSpinner />;\r\n  }\r\n  \r\n    return (\r\n      <>\r\n        <DisplayPlanets planets={planetData} />\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Planets;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AnyAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport axios from 'axios';\r\nimport ISpecies from '../../model/Species';\r\n\r\nexport interface SpeciesState {\r\n    species: ISpecies[]\r\n    loading: boolean;\r\n    errors: string;\r\n}\r\n\r\nconst initialState: SpeciesState = {\r\n    species: [],\r\n    loading: false,\r\n    errors: \"\",\r\n}\r\n// Slice\r\nconst speciesSlice = createSlice({\r\n  name: 'species',\r\n  initialState,\r\n  reducers: {\r\n    setSpecies: (state, action) => {\r\n      state.species = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSpecies, setLoading, setErrors } = speciesSlice.actions;\r\n\r\nexport default speciesSlice.reducer;\r\n\r\nexport const speciesSelector = (state: {speciesStore: SpeciesState}) => state.speciesStore;\r\n\r\n// Actions\r\n\r\nexport const getSpecies = (urls: string[]): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      let speciesData: ISpecies[] = []\r\n      await Promise.allSettled(urls.map((url) => axios.get(url)))\r\n        .then((data) => {\r\n          data.forEach((species: any) => speciesData.push(species?.value.data))\r\n        })\r\n        .catch((err) => console.log(err));\r\n      dispatch(setLoading(false));\r\n      dispatch(setSpecies(speciesData));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport ISpecies from '../../model/Species';\r\nimport moment from 'moment';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    species: ISpecies | undefined;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst SpeciesModalComponent: React.FC<Props> = ({ show, species, handleClose }) => {\r\n  \r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{species?.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Classification: {species?.classification}</p>\r\n          <p>Designation: {species?.designation}</p>\r\n          <p>Average Height: {species?.average_height}</p>\r\n          <p>Skin Colors: {species?.skin_colors}</p>\r\n          <p>Hair Colors: {species?.hair_colors}</p>\r\n          <p>Eye Colors: {species?.eye_colors}</p>\r\n          <p>Average Lifespan: {species?.average_lifespan}</p>\r\n          <p>Language: {species?.language}</p>\r\n          <p>Created: {moment(species?.created).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n          <p>Edited: {moment(species?.edited).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpeciesModalComponent;\r\n","import React, { useState } from 'react'\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport ISpecies from '../model/Species';\r\nimport SpeciesModalComponent from './modals/SpeciesModalComponent';\r\n\r\nconst DisplaySpecies = (props:{ species: ISpecies[] }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentSpecies, setCurrentSpecies] = useState<ISpecies>();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (species: ISpecies) => {\r\n    setCurrentSpecies(species);\r\n    setShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header as={\"h5\"}>Species</Card.Header>\r\n        <Card.Body>\r\n          <ListGroup variant=\"flush\">\r\n            {props.species.map((specie, index) => (\r\n              <ListGroup.Item key={index} onClick={() => handleShow(specie)}>{specie.name}</ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n      <SpeciesModalComponent show={show}\r\n                            species={currentSpecies}\r\n                            handleClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplaySpecies;\r\n","import React, { useEffect, useState} from 'react';\r\nimport { getSpecies, speciesSelector } from '../features/species/SpeciesSlice';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport ISpecies from '../model/Species';\r\nimport DisplaySpecies from './DisplaySpecies';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\n\r\nfunction Species(props: { species: string[] }) {\r\n    const [speciesData, setSpeciesData] = useState<ISpecies[]>([]);\r\n  \r\n    const dispatch: any = useAppDispatch();\r\n    const { species, loading } = useAppSelector(speciesSelector);\r\n\r\n    useEffect(() => {\r\n      dispatch(getSpecies(props.species));\r\n    }, [props.species, dispatch])\r\n    \r\n\r\n    useEffect(() => {\r\n      setSpeciesData(species);\r\n    }, [species]);\r\n\r\n    if (loading) {\r\n      return <LoadingSpinner />;\r\n  }\r\n  \r\n    return (\r\n      <>\r\n        <DisplaySpecies species={speciesData} />\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Species;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AnyAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport axios from 'axios';\r\nimport IStarship from '../../model/Starship';\r\n\r\nexport interface StarshipState {\r\n    starships: IStarship[]\r\n    loading: boolean;\r\n    errors: string;\r\n}\r\n\r\nconst initialState: StarshipState = {\r\n    starships: [],\r\n    loading: false,\r\n    errors: \"\",\r\n}\r\n// Slice\r\nconst starshipsSlice = createSlice({\r\n  name: 'starships',\r\n  initialState,\r\n  reducers: {\r\n    setStarships: (state, action) => {\r\n      state.starships = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setStarships, setLoading, setErrors } = starshipsSlice.actions;\r\n\r\nexport default starshipsSlice.reducer;\r\n\r\nexport const starshipSelector = (state: {starshipsStore: StarshipState}) => state.starshipsStore;\r\n\r\n// Actions\r\n\r\nexport const getStarship = (urls: string[]): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      let starshipData: IStarship[] = []\r\n      await Promise.allSettled(urls.map((url) => axios.get(url)))\r\n        .then((data) => {\r\n          data.forEach((starship: any) => starshipData.push(starship?.value.data))\r\n        })\r\n        .catch((err) => console.log(err));\r\n      dispatch(setLoading(false));\r\n      dispatch(setStarships(starshipData));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport IStarship from '../../model/Starship';\r\nimport moment from 'moment';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    starship: IStarship | undefined;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst StarshipModalComponent: React.FC<Props> = ({ show, starship, handleClose }) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{starship?.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Model: {starship?.model}</p>\r\n          <p>Manufacturer: {starship?.manufacturer}</p>\r\n          <p>Cost in Credits: {starship?.cost_in_credits}</p>\r\n          <p>Length: {starship?.length}</p>\r\n          <p>Max Atmosphering Speed: {starship?.max_atmosphering_speed}</p>\r\n          <p>Crew: {starship?.crew}</p>\r\n          <p>Passengers: {starship?.passengers}</p>\r\n          <p>Cargo Capacity: {starship?.cargo_capacity}</p>\r\n          <p>Consumables: {starship?.consumables}</p>\r\n          <p>Hyperdrive Rating: {starship?.hyperdrive_rating}</p>\r\n          <p>MGLT: {starship?.MGLT}</p>\r\n          <p>Starship Class: {starship?.starship_class}</p>\r\n          <p>Created: {moment(starship?.created).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n          <p>Edited: {moment(starship?.edited).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StarshipModalComponent;\r\n","import React, { useState } from 'react'\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport IStarship from '../model/Starship';\r\nimport StarshipModalComponent from './modals/StarshipModalComponent';\r\n\r\ntype StarshipsProps = {\r\n  starships: IStarship[];\r\n};\r\n\r\nconst DisplayStarships = ({ starships }: StarshipsProps) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentStarship, setCurrentStarship] = useState<IStarship>();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (starship: IStarship) => {\r\n    setCurrentStarship(starship);\r\n    setShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header as=\"h5\">Starships</Card.Header>\r\n        <Card.Body>\r\n          <ListGroup variant=\"flush\">\r\n            {starships.map((starship, index) => (\r\n              <ListGroup.Item key={index} onClick={()=> handleShow(starship)}>{starship.name}</ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n      <StarshipModalComponent show={show}\r\n                              starship={currentStarship}\r\n                              handleClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayStarships;\r\n","import React, { useEffect, useState} from 'react';\r\nimport { getStarship, starshipSelector } from '../features/starship/StarshipSlice';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport IStarship from '../model/Starship';\r\nimport DisplayStarships from './DisplayStarships';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\n\r\nfunction Starships(props:{ starships: string[] }) {\r\n    const [starshipData, setStarshipData] = useState<IStarship[]>([]);\r\n  \r\n    const dispatch: any = useAppDispatch();\r\n    const { starships, loading } = useAppSelector(starshipSelector);\r\n\r\n    useEffect(() => {\r\n      dispatch(getStarship(props.starships));\r\n    }, [props.starships, dispatch])\r\n    \r\n\r\n    useEffect(() => {\r\n      setStarshipData(starships);\r\n    }, [starships]);\r\n\r\n    if (loading) {\r\n      return <LoadingSpinner />;\r\n  }\r\n  \r\n    return (\r\n      <>\r\n        <DisplayStarships starships={starshipData} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default Starships;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AnyAction, ThunkAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport axios from 'axios';\r\nimport IVehicle from '../../model/Vehicle';\r\n\r\nexport interface VehicleState {\r\n    vehicles: IVehicle[]\r\n    loading: boolean;\r\n    errors: string;\r\n}\r\n\r\nconst initialState: VehicleState = {\r\n    vehicles: [],\r\n    loading: false,\r\n    errors: \"\",\r\n}\r\n// Slice\r\nconst vehiclesSlice = createSlice({\r\n  name: 'vehicles',\r\n  initialState,\r\n  reducers: {\r\n    setVehicles: (state, action) => {\r\n      state.vehicles = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setVehicles, setLoading, setErrors } = vehiclesSlice.actions;\r\n\r\nexport default vehiclesSlice.reducer;\r\n\r\nexport const vehicleSelector = (state: {vehiclesStore: VehicleState}) => state.vehiclesStore;\r\n\r\n// Actions\r\n\r\nexport const getVehicle = (urls: string[]): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      let vehicleData: IVehicle[] = []\r\n      await Promise.allSettled(urls.map((url) => axios.get(url)))\r\n        .then((data) => {\r\n          data.forEach((vehicle: any) => vehicleData.push(vehicle?.value.data))\r\n        })\r\n        .catch((err) => console.log(err));\r\n      dispatch(setLoading(false));\r\n      dispatch(setVehicles(vehicleData));\r\n    } catch (e: any) {\r\n      dispatch(setErrors(e.message));\r\n      dispatch(setLoading(false));\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport IVehicle from '../../model/Vehicle';\r\nimport moment from 'moment';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    vehicle: IVehicle | undefined;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst VehicleModalComponent: React.FC<Props> = ({ show, vehicle, handleClose }) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{vehicle?.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Model: {vehicle?.model}</p>\r\n          <p>Manufacturer: {vehicle?.manufacturer}</p>\r\n          <p>Cost in Credits: {vehicle?.cost_in_credits}</p>\r\n          <p>Length: {vehicle?.length}</p>\r\n          <p>Max Atmosphering Speed: {vehicle?.max_atmosphering_speed}</p>\r\n          <p>Crew: {vehicle?.crew}</p>\r\n          <p>Passengers: {vehicle?.passengers}</p>\r\n          <p>Cargo Capacity: {vehicle?.cargo_capacity}</p>\r\n          <p>Consumables: {vehicle?.consumables}</p>\r\n          <p>Vehicle Class: {vehicle?.vehicle_class}</p>\r\n          <p>Created: {moment(vehicle?.created).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n          <p>Edited: {moment(vehicle?.edited).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleModalComponent;\r\n","import React, { useState } from 'react'\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport IVehicle from '../model/Vehicle';\r\nimport VehicleModalComponent from './modals/VehicleModalComponent';\r\n\r\ntype VehiclesProps = {\r\n  vehicles: IVehicle[];\r\n};\r\n\r\nconst DisplayVehicles = ({ vehicles }: VehiclesProps) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentVehicle, setCurrentVehicle] = useState<IVehicle>();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (vehicle: IVehicle) => {\r\n    setCurrentVehicle(vehicle);\r\n    setShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header as=\"h5\">Vehicles</Card.Header>\r\n        <Card.Body>\r\n          <ListGroup variant=\"flush\">\r\n            {vehicles.map((vehicle, index) => (\r\n              <ListGroup.Item key={index} onClick={() => handleShow(vehicle)}>{vehicle.name}</ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n      <VehicleModalComponent show={show}\r\n                            vehicle={currentVehicle}\r\n                            handleClose={handleClose}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DisplayVehicles\r\n   \r\n","import React, { useEffect, useState} from 'react';\r\nimport { getVehicle, vehicleSelector } from '../features/vehicle/VehicleSlice';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport IVehicle from \"../model/Vehicle\";\r\nimport DisplayVehicles from './DisplayVehicles';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\n\r\nfunction Vehicles(props:{ vehicles: string[] }) {\r\n    const [vehicleData, setVehicleData] = useState<IVehicle[]>([]);\r\n  \r\n    const dispatch: any = useAppDispatch();\r\n    const { vehicles, loading } = useAppSelector(vehicleSelector);\r\n\r\n    useEffect(() => {\r\n      dispatch(getVehicle(props.vehicles));\r\n    }, [props.vehicles, dispatch])\r\n    \r\n\r\n    useEffect(() => {\r\n      setVehicleData(vehicles);\r\n    }, [vehicles]);\r\n    \r\n    if (loading) {\r\n      return <LoadingSpinner />;\r\n  }\r\n\r\n    return (\r\n      <>\r\n        <DisplayVehicles vehicles={vehicleData} />\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Vehicles;","import React, { useEffect } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { filmSelector, getFilm } from '../features/films/FilmSlice';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux-hooks';\r\nimport Characters from './Characters';\r\nimport DisplayFilmInfo from './DisplayFilmInfo';\r\nimport ErrorPage from './ErrorPage';\r\nimport LoadingSpinner from './loading-spinner/LoadingSinner';\r\nimport Planets from './Planets';\r\nimport Species from './Species';\r\nimport Starships from './Starships';\r\nimport Vehicles from './Vehicles';\r\n\r\nconst Film: React.FC = (props: any) => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const { loading, errors } = useAppSelector(filmSelector);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const errorCode = 404;\r\n\r\n    useEffect(() => {\r\n        dispatch(getFilm(location.state?.film?.url));\r\n    }, [dispatch, location.state?.film?.url]);\r\n\r\n    if (loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    if (location.state?.film === undefined || location.state?.film === null) {\r\n        return <ErrorPage errorCode={errorCode} />;\r\n      }\r\n\r\n    return (\r\n        <Container>\r\n            <DisplayFilmInfo title={location.state?.film?.title}\r\n                            episode_id={location.state?.film?.episode_id}\r\n                            opening_crawl={location.state?.film?.opening_crawl}\r\n                            director={location.state?.film?.director}\r\n                            producer={location.state?.film?.producer}\r\n                            release_date={location.state?.film?.release_date}\r\n                            species={location.state?.film?.species}\r\n                            starships={location.state?.film?.starships}\r\n                            vehicles={location.state?.film?.vehicles}\r\n                            characters={location.state?.film?.characters}\r\n                            url={location.state?.film?.url}\r\n                            planets={location.state?.film?.planets}\r\n                            created={location.state?.film?.created}\r\n                            edited={location.state?.film?.edited}\r\n            />\r\n            <br />\r\n            <Characters characters={location.state?.film?.characters} />\r\n            <Planets planets={location.state?.film?.planets} />\r\n            <Species species={location.state?.film?.species} />\r\n            <Starships starships={location.state?.film?.starships} />\r\n            <Vehicles vehicles={location.state?.film?.vehicles} />\r\n            <br />\r\n            <Button onClick={() => navigate(-1)}>Back</Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Film;\r\n","export default __webpack_public_path__ + \"static/media/logo.87dc8524.png\";","import React from 'react';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <img\r\n      src={logo}\r\n      alt=\"Star Wars\"\r\n      style={{ width: 300, display: 'block', margin: 'auto' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './App.css';\r\nimport Films from './components/Films';\r\nimport Film from './components/Film';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport ErrorPage from './components/ErrorPage';\r\nimport Header from './components/Header';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <div className=\"container\">\r\n          <Header />\r\n          <Routes>\r\n            <Route path=\"/star-wars-react-redux-app\" element={<Films />} />\r\n            <Route path=\"/film/:name\" element={<Film />} />\r\n            <Route path=\"/404\" element={<ErrorPage errorCode={404} />} />\r\n            <Route path=\"/500\" element={<ErrorPage errorCode={500} />} />\r\n            <Route path=\"*\" element={<ErrorPage errorCode={404} />} />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux';\r\nimport filmsSliceReducer from '../features/films/FilmSlice';\r\nimport characterSliceReducer from '../features/characters/CharacterSlice';\r\nimport planetsSliceReducer from '../features/planet/PlanetSlice';\r\nimport speciesSliceReducer from '../features/species/SpeciesSlice';\r\nimport starshipSliceReducer from '../features/starship/StarshipSlice';\r\nimport vehicleSliceReducer from '../features/vehicle/VehicleSlice';\r\n\r\nconst reducer = combineReducers({\r\n  // here we will be adding reducers\r\n  filmsStore: filmsSliceReducer,\r\n  charactersStore: characterSliceReducer,\r\n  planetsStore: planetsSliceReducer,\r\n  speciesStore: speciesSliceReducer,\r\n  starshipsStore: starshipSliceReducer,\r\n  vehiclesStore: vehicleSliceReducer,\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}